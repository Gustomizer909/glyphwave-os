# Glyphwave OS Validation and Linting Workflow

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  validate:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Set up Node.js for JSON schema validation
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # Install ajv-cli for JSON schema validation
      - name: Install JSON validation tools
        run: npm install -g ajv-cli markdownlint-cli

      # Validate JSON files against schema
      - name: Validate JSON Schema
        working-directory: ${{ github.workspace }}
        run: |
          echo "Validating glyph_table.json against schema..."
          echo "Current working directory: $(pwd)"
          echo "Files in current directory:"
          ls -la
          ajv validate -s schemas/glyph_table.schema.json -d glyph_table.json

      # Lint Markdown files
      - name: Lint Markdown files
        working-directory: ${{ github.workspace }}
        run: |
          echo "Linting Markdown files..."
          markdownlint docs/ *.md || true
          echo "Markdown linting completed (warnings allowed)"

      # Validate scroll file naming convention
      - name: Check scroll file naming
        working-directory: ${{ github.workspace }}
        run: |
          echo "Checking scroll file naming convention..."
          cd docs/codex/
          for file in Scroll_*.md; do
            if [[ ! "$file" =~ ^Scroll_[0-9]+_[A-Za-z_]+\.md$ ]]; then
              echo "ERROR: $file does not follow naming convention Scroll_##_Title.md"
              exit 1
            fi
          done
          echo "All scroll files follow naming convention ✓"

      # Check for typographic hyphens in JSON files
      - name: Validate JSON token format
        working-directory: ${{ github.workspace }}
        run: |
          echo "Checking for typographic hyphens in JSON files..."
          if grep -r "‑" *.json; then
            echo "ERROR: Found typographic hyphens (‑) in JSON files. Use ASCII hyphens (-) instead."
            exit 1
          fi
          echo "JSON files use correct ASCII hyphens ✓"

      # Validate file references
      - name: Check file references
        working-directory: ${{ github.workspace }}
        run: |
          echo "Checking file references in glyph_table.json..."
          python3 -c "
          import json
          with open('glyph_table.json', 'r') as f:
              data = json.load(f)
          
          import os
          for item in data:
              file_path = item.get('path') or item.get('file')
              if file_path and not os.path.exists(file_path):
                  print(f'ERROR: Referenced file does not exist: {file_path}')
                  exit(1)
          print('All file references are valid ✓')
          "
